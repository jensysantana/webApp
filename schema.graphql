enum AllowedColor {
  BLUE
  GREEN
  RED
}

type BasicResponse {
  message: String
  name: String
  statusCode: Int
  success: Boolean
}

type Emailx {
  email: String
  fname: String
}

type ErrorResponse {
  data: [UserErrors]
  errors: [Errors]
  message: String
  name: String
  statusCode: Int
  success: Boolean
}

type Errors {
  message: String!
  path: String!
}

type Mutation {
  createTask(input: TaskInput): Task
  createUser(input: UserInput): Response
  deleteUser(_id: String): User
  updateUser(_id: String!, input: UserInput): Response
}

type Name {
  name: String
}

type Query {
  getULang: SimpleResponse!
  getUsers: [User]
  getpcsrft: Response!
  greet(name: String!): String
  greet2: Int
  hello: String
  info: String
  tasks: [Task]
}

type Response {
  response: ErrorResponse
}

type ResponseCsrfT {
  response: ErrorResponse
}

type SimpleResponse {
  response: BasicResponse
}

type Subscription {
  newUser: User!
}

type Task {
  _id: ID
  description: String!
  number: Int
  title: String!
}

input TaskInput {
  description: String!
  number: Int
  title: String!
}

type User {
  _id: ID
  cpassword: String!
  createdAt: String
  email: String!
  fname: String!
  lname: String!
  password: String!
}

type UserC {
  id: ID!
}

type UserErrors {
  cpassword: String
  email: String
  fname: String
  lname: String
  password: String
}

input UserInput {
  cpassword: String!
  email: String!
  fname: String!
  lname: String!
  password: String!
}

input userInputID {
  _id: String!
}
